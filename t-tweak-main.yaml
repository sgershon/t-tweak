openapi: 3.0.3
info:
  title: T-Tweak API
  description: |

    T-Tweak helps you tweak text! üñâ

    ### All functions log their usage, so don't write anything secret!
  contact:
    name: 67778 Course
  version: 0.0.1
paths:
  /:
    get:
      summary: Status
      description: |-
        Provides status of the t-tweak service.

        Return Type: str
      operationId: status__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
  /count/all:
    get:
      summary: Count All
      description: |-
        Provides the total count of text tweaks serviced by t-tweak.

        Return Type: int
      operationId: count_all_count_all_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntOut'
  /history:
    get:
      summary: Get History
      description: |-
        Retrieves the entire history of text tweaks serviced by t-tweak.

        Return Type: str
      operationId: get_history_history_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStringOut'
  /length/{text}:
    get:
      summary: Length
      description: |-
        Calculates the length of a text provided.

        Return Type: int
      operationId: length_length__text__get
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Text to be measured
            title: Text
          description: Text to be measured
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /reverse/{text}:
    get:
      summary: Reverse
      description: |-
        Reverses the text provided.

        Return Type: str
      operationId: reverse_reverse__text__get
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Text to be reversed
            title: Text
          description: Text to be reversed
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /upper/{text}:
    get:
      summary: Upper
      description: |-
        Converts a text to all-uppercase.

        Non-alphabetic characters are left untouched.

        Return Type: str
      operationId: upper_upper__text__get
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Text to convert to upper case
            title: Text
          description: Text to convert to upper case
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lower/{text}:
    get:
      summary: Lower
      description: |-
        Converts a text to all lowercase.

        Non-alphabetic characters are left untouched.

        Return Type: str
      operationId: lower_lower__text__get
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Text to convert to lower case
            title: Text
          description: Text to convert to lower case
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /mix_case/{text}:
    get:
      summary: Mix Case
      description: |-
        Text will have the case of its letters alternate between lower and upper case.

        Non-alphabetic characters are left untouched.

        Return Type: str
      operationId: mix_case_mix_case__text__get
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Text to alternate cases
            title: Text
          description: Text to alternate cases
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /find/{string}/{sub}:
    get:
      summary: Find
      description: |-
        Finds strings inside strings.

        Returns the locations of the substrings within said string (index starts at 0).

        Return Type: list[int]
      operationId: find_find__string___sub__get
      parameters:
        - name: string
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Larger string to serve as source for the search
            title: String
          description: Larger string to serve as source for the search
        - name: sub
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Smaller string to find within the larger string
            title: Sub
          description: Smaller string to find within the larger string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIntOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /substring/{string}/{start}/{end}:
    get:
      summary: Substring
      description: |-
        Extracts a substring from a larger string.

        Returns the resulting string based on the start and end positions (index starts at 0).

        Return Type: str
      operationId: substring_substring__string___start___end__get
      parameters:
        - name: string
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: A string to extract a slice from.
            title: String
          description: A string to extract a slice from.
        - name: start
          in: path
          required: true
          schema:
            type: integer
            maximum: 20
            minimum: 1
            description: Where to start the extraction
            title: Start
          description: Where to start the extraction
        - name: end
          in: path
          required: true
          schema:
            type: integer
            maximum: 20
            minimum: 1
            description: Where to end the extraction
            title: End
          description: Where to end the extraction
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '409':
          description: Conflict (incompatible start and end)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /password/{password}:
    get:
      summary: Password Strength
      description: |-
        A strength score for passwords between 0 and 10. Is your password strong enough?.

        0 is a weak password, 10 is a strong password.

        Rules:
        * A password should be longer than 12 characters. Score is reduced by the distance from the password length to 12.
        * A password should include at least one upper case letter, one lower case letter, and one number. Score is reduced
        *   by 2 for every infraction.
        * A password shouldn't be the words ‚Äúpassword‚Äù, "admin" or "root". Violating this rule results in a score of 0.
        * A password shouldn't be the same letter or number repeated for its entire length. This deducts 7 points.

        Return Type: int
      operationId: password_strength_password__password__get
      parameters:
        - name: password
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Your password. *Do not use a real one*, it gets logged and is publicly visible.
            title: Password
          description: Your password. *Do not use a real one*, it gets logged and is publicly visible.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /counterstring/{cs_length}/{char}:
    get:
      summary: Counterstring
      description: |-
        Generates a counterstring, a string that measures itself, and helps you measure software.

        Learn more about counterstrings here: https://www.satisfice.com/blog/archives/22

        Return Type: str
      operationId: counterstring_counterstring__cs_length___char__get
      parameters:
        - name: cs_length
          in: path
          required: true
          schema:
            type: integer
            maximum: 150
            minimum: 0
            description: Size of the desired counterstring
            title: Cs Length
          description: Size of the desired counterstring
        - name: char
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Character to use as the counterstring measure mark
            title: Char
          description: Character to use as the counterstring measure mark
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /random:
    get:
      summary: Rand Str
      description: |-
        Generates a random string of desired size.

        Return Type: str
      operationId: rand_str_random_get
      parameters:
        - name: length
          in: query
          required: true
          schema:
            type: integer
            maximum: 20
            minimum: 0
            description: Size of the desired random string
            title: Length
          description: Size of the desired random string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /anagrams/{text}:
    get:
      summary: Anagrams
      description: |-
        Finds anagrams for the text provided.

        If more than one anagram is found, all the anagrams are returned within a list.

        Return Type: list[str]
      operationId: anagrams_anagrams__text__get
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
            maxLength: 30
            description: Text to find anagrams for. Fun!
            title: Text
          description: Text to find anagrams for. Fun!
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /time:
    get:
      summary: Server Time
      description: |-
        Retrieves the server time. For debug purposes (actually, for didactic ones).

        Return Type: str
      operationId: server_time_time_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '203':
          description: Non Authoritative Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reset_server:
    get:
      summary: Server Reset
      description: |-
        Resets the server: reinitializes history and count.

        Return Type: str
      operationId: server_reset_reset_server_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
  /storage/{command}:
    get:
      summary: Storage
      description: |-
        Temporary storage for strings. Can store and retrieve up to 5 strings!

        The storage accepts 5 path commands:
        - stop
            - Resets the machine. All strings are deleted.
        - clear
            - Clears strings stored in memory.
        - add
            - Accepts a query parameter "string" for word to add. Words are truncated to 20 chars. Up to 5 words accepted.
        - query
            - Retrieves stored strings. The query parameter "index" determines the string to return (index accepts an int).
        - sorry
            - On errors, restores the ability to query.
        - state
            - Returns information about the state of the storage system

        Examples flow:
        1. http://t-tweak.gershon.info/storage/add
        1. http://t-tweak.gershon.info/storage/add?string=1st_string
        1. ... (more words)
        1. http://t-tweak.gershon.info/storage/add?string=5st_string
        1. http://t-tweak.gershon.info/storage/query?index=0
        1. http://t-tweak.gershon.info/storage/query?index=9
        1. http://t-tweak.gershon.info/storage/sorry
        1. http://t-tweak.gershon.info/storage/query?index=0
        1. http://t-tweak.gershon.info/storage/stop

        Return type: str
      operationId: storage_storage__command__get
      parameters:
        - name: command
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            description: Command for the string storage engine.
            title: Command
          description: Command for the string storage engine.
        - name: index
          in: query
          required: false
          schema:
            type: integer
            title: Index
        - name: string
          in: query
          required: false
          schema:
            type: string
            default: ''
            title: String
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IntOut:
      properties:
        res:
          type: integer
          title: Res
      type: object
      required:
        - res
      title: IntOut
    ListIntOut:
      properties:
        res:
          items:
            type: integer
          type: array
          title: Res
      type: object
      required:
        - res
      title: ListIntOut
    ListStringOut:
      properties:
        res:
          items:
            type: string
          type: array
          title: Res
      type: object
      required:
        - res
      title: ListStringOut
    Message:
      properties:
        detail:
          type: string
          title: Detail
      type: object
      required:
        - detail
      title: Message
    StringOut:
      properties:
        res:
          type: string
          title: Res
      type: object
      required:
        - res
      title: StringOut
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
